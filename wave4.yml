config:
    target: "{{ $processEnvironment.SERVICE_END_POINT }}"
    phases:
        - duration: 20
          arrivalRate: 10
        - duration: 30
          arrivalRate: 5
          rampTo: 30
          name: "Sustained"
        - duration: 15
          arrivalRate: 5
          rampTo: 100
          name: "Spike"
        - duration: 30
          arrivalRate: 5
          rampTo: 30
          name: "Sustained"
    processor: "./randomizer.js"
    defaults:
        headers:
            Authorization: 'Basic c29tZS1hcGktdG9rZW46'
scenarios:
    - flow:
        - function: "generateRandomData"
        - post:
            url: "/rides"
            json:
                riderId: "{{ randomRiderId }}"
                bookingLocation:
                    N: "{{ randomBookingLocN }}"
                    W: "{{ randomBookingLocW }}"
                targetLocation:
                    N: "{{ randomTargetLocN }}"
                    W: "{{ randomTargetLocW }}"
            capture:
                json: "$.rideId"
                as: "rideId"
        - log: "Sending a request with rideId {{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - log: "Sending a request with driverId {{ randomDriverId }} with loc ({{ randomDriverLocN }}, {{ randomDriverLocW }})"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - log: "Sending a request with riderId {{ randomRiderId }} with booking loc ({{ randomBookingLocN }}, {{ randomBookingLocW }}), target loc ({{ randomTargetLocN }}, {{ randomTargetLocW }})"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/locations"
            json:
                updatedLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - put:
            url: "/drivers/{{ randomDriverId }}/rides/{{ rideId }}/accept"
            json:
                acceptLocation:
                    N: "{{ randomDriverLocN }}"
                    W: "{{ randomDriverLocW }}"
        - log: "Driver {{ randomDriverId }} accepted rideId {{ rideId }}"
    - flow:
        - function: "generateRandomData"
        - post:
            url: "/rides"
            json:
                riderId: "{{ randomRiderId }}"
                bookingLocation:
                    N: "{{ randomBookingLocN }}"
                    W: "{{ randomBookingLocW }}"
                targetLocation:
                    N: "{{ randomTargetLocN }}"
                    W: "{{ randomTargetLocW }}"
            capture:
                json: "$.rideId"
                as: "rideId"
        - log: "Flow two: Sending a request with rideId {{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - get:
            url: "/rides/{{ rideId }}"
        - put:
            url: "/riders/{{ randomRiderId }}/locations"
            json:
                currentLocation:
                    N: "{{ randomRiderLocN }}"
                    W: "{{ randomRiderLocW }}"
        - log: "Location of riderId {{ randomRiderId }} updated"
        - get:
            url: "/drivers/{{ randomDriverId }}/rides/acceptable"
        - log: "Acceptable rides for {{ randomDriverId }} retrieved"
